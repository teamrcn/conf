# vim:foldmethod=marker

# {{{ Explanation of hardstatus line    ##

# Ignore the ' marks if you use these examples for yourself

# Note that if you want to use the color brown under konsole
# You actually use bright yellow (%{Y}). 

# Note the embeded space after the colon, I feel 
#  it just looks nicer with a blank between the
#  text and console edge:
#   '%{=b}%{G} Screen(s): '

# This prints the window listing in blue:
#   '%{b}%w'

# This right-aligns what follows:
#   '%='

# This displays the time (hours and minutes) in 12hr format 
# and adds an AM/PM flag, in bold green:
#   '%{G}%C%A'

# This displays the day of the week:
#   '%D'

#This displays the date in Mon/day/year format:
# and again I embeded a space to give me one space
# between the text and console edge:
#  '%M/%d/%Y '

# The resulting command give you a status line that 
#  looks like this: 
#   | Screen(s): 0* bash  <blanks zapped>         5:30PM  Fri, Jun/25/2004 |
#  (The pipes indicate the edges of the xterm/console).
# Green text, time, and date; windows in blue:
# }}}
hardstatus alwayslastline "%{=b}%{G} Screen(s): %{b}%w %=%{kG}%C%A  %D, %M/%d/%Y "

# {{{ General options
# Turn off start message:
startup_message off
nethack on
defscrollback         10000            # default: 100
vbell off

# shell zsh # Use this shell rather than default shell


msgwait 1 # Set messages timeout to one second: 
shelltitle $HOST  

termcapinfo xterm* ti@:te@ #Using the scrollwheel in GNU screen
defterm xterm-256color
# }}}

# {{{ Keyboard Bindings
# bind F7  to detach screen session from this terminal
# bind F8  to kill current screen window.
# bind F9  to create a new screen
# bind F10 to rename current screen window
# bind F11 to move to previous window
# bind F12 to move to next window
#bindkey -k k7 detach
#bindkey -k k8 kill
#bindkey -k k9 screen
#bindkey -k k; title
#bindkey -k F1 prev
#bindkey -k F2 next

escape ^jj

bind ' ' windows                # Show listing of all windows
bind 'h' next                   # Next window
bind 'k' prev                   # Prevwindow
bind ^k next                    # Next window
bind ^h prev                    # Prev window
#bind '[' copy                   # Copy paste buffer
bind 'e' screen -t emacs@$HOST -h 0 1 /usr/local/bin/emacs -nw
                                # Create new emacs window
bind 'i' info                   # Show info about the current window
bind 's' screen -t tcsh@$HOST -ln -h 100  # Create new shell window
#bindkey -k F2 next #Bind F2  to next
#bindkey -k k1 prev #Bind F11 to Prev
# }}}

# {{{ Autorun tabs
#screen -t tcsh@$HOST -ln -h 100 0
#screen -t top -ln -h 100 0
                                # Start a shell with the title of
                                # tcsh@.  turn off login mode
                                # (remove the window from utmp).  Use a
                                # scrollback of 100 lines and start the shell
                                # in window 2 (or the next available window)
#monitor on                      # Monitor the above shell window
# }}}
